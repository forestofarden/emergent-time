--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Register a Slice by its gem/lib path for loading at startup
- !ruby/struct:SM::Flow::P 
  body: This is referenced from gems/&lt;slice-gem-x.x.x&gt;/lib/&lt;slice-gem&gt;.rb Which gets loaded for any gem. The name of the file is used to extract the Slice module name.
- !ruby/struct:SM::Flow::P 
  body: "@param slice_file&lt;String&gt; The path of the gem 'init file' @param force&lt;Boolean&gt; Whether to overwrite currently registered slice or not."
- !ruby/struct:SM::Flow::P 
  body: "@return &lt;Module&gt; The Slice module that has been setup."
- !ruby/struct:SM::Flow::P 
  body: "@example Merb::Slices::register(<em>FILE</em>) @example Merb::Slices::register('/path/to/my-slice/lib/my-slice.rb')"
full_name: Merb::Slices::register
is_singleton: true
name: register
params: (slice_file, force = true)
visibility: public
