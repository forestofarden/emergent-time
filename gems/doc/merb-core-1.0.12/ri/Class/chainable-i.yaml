--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Allows the definition of methods on a class that will be available via super.
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Examples
- !ruby/struct:SM::Flow::VERB 
  body: "    class Foo\n      chainable do\n        def hello\n          &quot;hello&quot;\n        end\n      end\n    end\n\n    class Foo\n      def hello\n        super + &quot; Merb!&quot;\n      end\n    end\n"
- !ruby/struct:SM::Flow::P 
  body: "Foo.new.hello #=&gt; &quot;hello Merb!&quot;"
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Parameters
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "&blk:"
    body: a block containing method definitions that should be marked as chainable
  type: :NOTE
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Returns
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "Module:"
    body: The anonymous module that was created
  type: :NOTE
full_name: Class#chainable
is_singleton: false
name: chainable
params: (&blk)
visibility: public
