--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: file if block_given?
comment: 
- !ruby/struct:SM::Flow::P 
  body: Removes all classes declared in the specified file. Any hashes which use classes as keys will be protected provided they have been added to Merb.klass_hashes. These hashes have their keys substituted with placeholders before the file's classes are unloaded. If a block is provided, it is called before the substituted keys are reconstituted.
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Parameters
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "file<String>:"
    body: The file to remove classes for.
  - !ruby/struct:SM::Flow::LI 
    label: "&block:"
    body: A block to call with the file that has been removed before klass_hashes are updated
  type: :NOTE
- !ruby/struct:SM::Flow::P 
  body: to use the current values of the constants they used as keys.
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Returns
- !ruby/struct:SM::Flow::P 
  body: nil
- !ruby/struct:SM::Flow::P 
  body: ":api: private"
full_name: Merb::BootLoader::LoadClasses::remove_classes_in_file
is_singleton: true
name: remove_classes_in_file
params: (file, &block) {|file if block_given?| ...}
visibility: public
