--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Returns a hash of the available mime types.
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Returns
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "Hash{Symbol => Hash{Symbol => Object}}:"
    body: The available mime types.
  type: :NOTE
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Notes
- !ruby/struct:SM::Flow::P 
  body: "Each entry corresponds to a call to add_mime_type, having the mime type key (:html, :xml, :json, etc.) as the key and a hash containing the following entries:"
- !ruby/struct:SM::Flow::VERB 
  body: "  :accepts           # the mime types that will be recognized by this entry\n  :transform_method  # the method called on an object to convert it to content of this type (such as to_json)\n  :content_type      # the value set to the &quot;Content-Type&quot; HTTP header when this mime is sent in a response\n  :response_headers  # sent in a response using this content type\n  :default_quality   # the scale factor used in describing content type preference\n  :response_block    # the block to be called with the controller when a request responds to this mime type\n"
- !ruby/struct:SM::Flow::P 
  body: ":api: public"
full_name: Merb::available_mime_types
is_singleton: true
name: available_mime_types
params: ()
visibility: public
