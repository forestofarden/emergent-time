--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: Provides conditional get support in Merb core. Conditional get support is intentionally simple and does not do fancy stuff like making ETag value from Ruby objects for you.
- !ruby/struct:SM::Flow::P 
  body: "The most interesting method for end user is +request_fresh?+ that is used after setting of last modification time or ETag:"
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Example
- !ruby/struct:SM::Flow::P 
  body: def show
- !ruby/struct:SM::Flow::VERB 
  body: "  self.etag = Digest::SHA1.hexdigest(calculate_cache_key(params))\n\n  if request_fresh?\n    self.status = 304\n    return ''\n  else\n    @product = Product.get(params[:id])\n    display @product\n  end\n"
- !ruby/struct:SM::Flow::P 
  body: end
constants: []

full_name: Merb::ConditionalGetMixin
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: etag
- !ruby/object:RI::MethodSummary 
  name: etag=
- !ruby/object:RI::MethodSummary 
  name: etag_matches?
- !ruby/object:RI::MethodSummary 
  name: last_modified
- !ruby/object:RI::MethodSummary 
  name: last_modified=
- !ruby/object:RI::MethodSummary 
  name: not_modified?
- !ruby/object:RI::MethodSummary 
  name: request_fresh?
name: ConditionalGetMixin
superclass: 
