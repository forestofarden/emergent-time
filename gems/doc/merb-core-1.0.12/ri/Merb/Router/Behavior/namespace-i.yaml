--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Creates a namespace for a route. This way you can have logical separation to your routes.
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Parameters
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "name_or_path<String, Symbol>:"
    body: The name or path of the namespace.
  - !ruby/struct:SM::Flow::LI 
    label: "options<Hash>:"
    body: Optional hash (see below)
  - !ruby/struct:SM::Flow::LI 
    label: "&block:"
    body: "All routes defined in the block will be scoped to the namespace defined by the #namespace method."
  type: :NOTE
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Options (opts)
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: ":path<String>:"
    body: match against this url
  type: :NOTE
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Block parameters
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "r<Behavior>:"
    body: The namespace behavior object. This is optional
  type: :NOTE
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Examples
- !ruby/struct:SM::Flow::VERB 
  body: "  namespace :admin do\n    resources :accounts\n    resource :email\n  end\n\n  # /super_admin/accounts\n  namespace(:admin, :path=&gt;&quot;super_admin&quot;) do\n    resources :accounts\n  end\n"
- !ruby/struct:SM::Flow::P 
  body: ":api: public"
full_name: Merb::Router::Behavior#namespace
is_singleton: false
name: namespace
params: (name_or_path, opts = {}, &block)
visibility: public
