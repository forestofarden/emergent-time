<script language="javascript">
  $().ready(function() {
    $("a[alt=ajax-load]").ajaxLoad();
    
    $('#create_event_comment_form').ajaxValidate({ 
  	  url: '<%= url(:validate_create_ec, :event_id => @event.id) %>'
  	});
    
    $('#create_event_comment_form').submit(function() {
      $(this).ajaxSubmit({
        success: function() {
          // reload the list of comments and scroll to the top
          // TODO.  this duplicates functionality in ajax-load... improve it for reloading (see assemble setContent)
          $.ajax({
            type: "GET",
            url:  "<%= resource(@event, :event_comments) %>",
            dataType: "html",	
            beforeSend: function(xhr) { xhr.setRequestHeader("Accept", "text/html"); },
            success: function(data) { 
              $("#event_comments .comments").empty().append(data);
              $("#create_event_comment_form textarea").val('');
              $("#event_comments").animate({scrollTop:0}, 'slow'); 
            }, 
            error: function(e) { alert("error:" + e); }
          });
        }
      });
      return false;
    });
    
  });
</script>

<div class="event selected" db_id="<%= @event.id %>" evt_start="<%= @event.start %>">
  <div class="event_container"> 
    <div class="event_dates"><%= @event.start.to_s(:emt_date) %><%= @event.finish ? " &mdash;#{@event.finish.to_s(:emt_date)}" : "" %></div>
    <div style="clear:both"></div>
    <div class="event_title"><%= @event.title %></div>
    <div class="event_description"><%= @event.description %></div>
  </div> 
</div>
<div class="clear"></div>

<div id="event_usage">
  <% if @cross_section %>
    <% @cross_section.each do |te| %>
    <div class="cross_section">
      <%= render :partial => './timeline_stats', :locals => { :timeline => te.timeline, :cue_event => te.event, :image_size => 40, :trunc => 250 } %>
      <div class="clear"></div>
      <div class="interpretation">
        <a href="<%= resource(te.timeline.user, te.timeline, :cue => te.event) %>"><%= te.interpretation ? te.interpretation.truncate(250) : "" %></a>
      </div>
      <div class="clear"></div>
    </div>
    <% end %>
  <% end %>
</div>